### Shift ###

x=scan(file='C:\\Users\\Desktop\\Data\\findFDG21.txt');nc=x[1];x=x[-1]
m=x

Sim=nc

for (kkk in 1:nc) {
nb=m[1];m=m[-1];y=matrix(m[c(1:(2*nb))],ncol=2,byrow=F);m=m[-c(1:(2*nb))] 
ti=y[,1];curve=y[,2]
tt=ti;lv=curve
zx=lv ; tx=tt ; wt=zx*0+1;tmz=tx[order(-zx)[1]]
del = tmz-1.5
tx=tx-del

Sim=c(Sim,nb,tx,zx)
}
x=Sim

setwd('C:\\Users\\Desktop\\')
write.table(file=paste('58 Shift AIFs','.txt'),
(Sim),append=T,col.names=FALSE,quote=FALSE,row.names=FALSE)

### Generate sim ###

data=read.table('C:\\Users\\Desktop\\Step 5.txt')
thetal=read.table('C:\\Users\\Desktop\\Step 3.txt')[,5:7]
TIME=data[,1]
FTE=data[,2]
alpha=2.1784
beta=7.8741
LAM=c(33.8598,  0.2001,  0.0088)
#0.6343658 0.2314848 0.2135296 
#0.01074079 0.02746608 0.04145845 
tpr = sort(unique(TIME[TIME<70]))
d=1
Comp <- function(tx,alpha,beta,d,LAM){
BS=NULL
for (i in 1:length(LAM)){
#Curve of first arrival at right ventricle
#Convolution between gamma and indicator function 
RV = ifelse((tx-d)*beta>0,
pgamma(tx*beta,alpha)-pgamma((tx-d)*beta,alpha),
pgamma(tx*beta,alpha))
#Approximate the convolution between gamma and exp to gamma 
m=alpha/beta+1./LAM[i]
v=alpha/(beta*beta)+1./(LAM[i]*LAM[i])
alphas=m*m/v
betas=m/v
bS = ifelse((tx-d)*betas>0,pgamma(tx*betas,alphas)-pgamma((tx-d)*betas,alphas),pgamma(tx*betas,alphas))
#Components matrix
BS = cbind(BS,bS)
}
MS=scale(BS,center=FALSE,scale=apply(BS,2,max))
MS
}
Comp(tpr,alpha,beta,d,LAM)
#pi=c(.6608,.2266,.1888)
#pi=c(0.6343658, 0.2314848, 0.2135296)
pi=apply(thetal,2,mean)
tem=c(pi%*%t(Comp(tpr,alpha,beta,d,LAM)))
plot(tpr,tem,t='b',lwd=3,xlab='Time(Minutes)',ylab='',
main='Template AIF from Population(Sampled AIF) at 63 time points')
legend(50,1,legend=c(expression(paste(alpha,'=','2.1784')),
expression(paste(beta,'=','7.8741')),
expression(paste(lambda[1],'=','33.8598')),
expression(paste(lambda[2],'=','0.2001')),
expression(paste(lambda[3],'=','0.0088')),
expression(paste(pi[1],'=','0.6134')),
expression(paste(pi[2],'=','0.2518')),
expression(paste(pi[3],'=','0.2292'))
),bty='n',text.col=4)
plot(TIME,FTE)
unique(TIME)
ddd=cbind(TIME,FTE)
 ddd=ddd[-which(TIME>70),]
plot(ddd[,1],ddd[,2])
fff=data.frame(ddd)
boxplot(FTE~TIME,data=fff,xlab='Time(Minutes)',ylab='',
main='Boxplot of Raw Residuals for Simulation (Sampled)',col=tpr+2)
abline(h=0,col=2,lwd=2)
sqrt(sd(ddd[-which(ddd[,1]>2.5),2])^2/58)
sd(ddd[which(ddd[,1]<0.0001),2])
ggg=ddd[-which(ddd[,1]<0.0001),]
sd(ggg[-which(ggg[,1]>2.5),2])
sd(ddd[35:50,2])
length(tem)
set.seed(4)
SIM1=tpr
for (i in 1:100){
noise=rep(NA,63)
for (j in 1:63){
noise[j]=sample(ddd[which(ddd[,1]==tpr[j]),2])[1]
}
sim1=tem+noise
SIM1=cbind(SIM1,sim1)
}

jjj=read.table('C:\\Users\\Desktop\\FDGpopn.txt')
apply(thetal,2,sd)
TIME=data[,1]
FTE=data[,2]
alpha=2.1784
beta=7.8741
LAM=c(33.8598,  0.2001,  0.0088)
tpr = sort(unique(TIME[TIME<70]))
d=1
Comp <- function(tx,alpha,beta,d,LAM){
BS=NULL
for (i in 1:length(LAM)){
#Curve of first arrival at right ventricle
#Convolution between gamma and indicator function 
RV = ifelse((tx-d)*beta>0,
pgamma(tx*beta,alpha)-pgamma((tx-d)*beta,alpha),
pgamma(tx*beta,alpha))

#Approximate the convolution between gamma and exp to gamma 
m=alpha/beta+1./LAM[i]
v=alpha/(beta*beta)+1./(LAM[i]*LAM[i])
alphas=m*m/v
betas=m/v
bS = ifelse((tx-d)*betas>0,pgamma(tx*betas,alphas)-pgamma((tx-d)*betas,alphas),pgamma(tx*betas,alphas))

#Components matrix
BS = cbind(BS,bS)
}
MS=scale(BS,center=FALSE,scale=apply(BS,2,max))
MS
}
Comp(tpr,alpha,beta,d,LAM)

summary(apply(jjj,1,sum))

set.seed(0)
SIM1=tpr
PIS=NULL
for (i in 1:1000){
pi1=0.6344+rnorm(1,0,0.1337)
pi2=.2266+rnorm(1,0,0.0872)
pi2=ifelse(pi2>0.04,pi2,0.04)
pi3=0.2135296+rnorm(1,0,0.04145845)
pi3=ifelse(pi3>0.1,pi3,0.1)
pi=c(pi1,pi2,pi3)

tem=c(pi%*%t(Comp(tpr,alpha,beta,d,LAM)))
sim1=tem+c(0,rnorm(17,0,.1),rnorm(45,0,0.02))
PIS=rbind(PIS,pi)
SIM1=cbind(SIM1,sim1)}

boxplot(apply(PIS,1,sum))
plot(tpr[1:15],c(c(0.6,0.2,0.2)%*%t(Comp(tpr,alpha,beta,d,LAM)))[1:15])

par(mfrow=c(2,1))
plot(tpr,noise,main='Bootstrap from Residuals')
abline(h=0,lwd=2,col=2)
plot(tpr,c(0,rnorm(17,0,.1),rnorm(45,0,0.02)),main='Simulation from Noise N(0,0.1)&N(0,0.02)',ylab='noise')
abline(h=0,lwd=2,col=2)

setwd('C:\\Users\\Desktop\\')
NPI=PIS[which(PIS[,1]+PIS[,2]+PIS[,3]>0.99&PIS[,1]+PIS[,2]+PIS[,3]<1.25),]
boxplot(apply(NPI,1,sum))
dim(NPI)
SIM2=NULL
PIS=NULL
Peak=NULL
for (i in 1:nrow(NPI)){
pi=NPI[i,]
tem=c(pi%*%t(Comp(tpr,alpha,beta,d,LAM)))
sim1=tem+c(0,rnorm(17,0,.1),rnorm(45,0,0.02))
sim1[9]=1
Peak=c(Peak,max(sim1))
PIS=rbind(PIS,pi)
SIM2=cbind(SIM2,sim1)}

dim(PIS)
PIS=PIS[which(Peak==1),]
dim(PIS)
SIM2=SIM2[,which(Peak==1)]
SIM2=cbind(tpr,SIM2)
which(Peak==1)
Peak=Peak[which(Peak==1)]
summary(apply(PIS[which(Peak==1),],1,sum))

dim(SIM2)
write.table(file='sim1.txt',(SIM2),col.names=F,row.names=F,append=T,quote=F)
write.table(file='pi1.txt',(PIS),col.names=F,row.names=F,append=T,quote=F)
write.table(file='Peak1.txt',(Peak),col.names=F,row.names=F,append=T,quote=F)

### Figure 1 ###

setwd('C:\\Users\\Desktop\\')

sim1 = read.table('sim1 f1 .txt',header=F)
sim2 = read.table('sim2 f1 .txt',header=F)
sim3 = read.table('sim3 f1 .txt',header=F)
sim4 = read.table('sim4 f1 .txt',header=F)
sim5 = read.table('sim5 f1 .txt',header=F)

sim1 = read.table('sim1.txt',header=F)[,1]
sim11 = read.table('sim11.txt',header=F)[,1]

pi1 = read.table('pi1.txt',header=F)[1:200,]
pi2 = read.table('pi2.txt',header=F)[1:200,]
pi3 = read.table('pi3.txt',header=F)[1:200,]
pi4 = read.table('pi4.txt',header=F)[1:200,]
pi5 = read.table('pi5.txt',header=F)[1:200,]

peak1 = scan('Peak1.txt')[1:200]
peak2 = scan('Peak2.txt')[1:200]
peak3 = scan('Peak3.txt')[1:200]
peak4 = scan('Peak4.txt')[1:200]
peak5 = scan('Peak5.txt')[1:200]

pi1f = read.table('pi1 f1 .txt',header=F)
pi2f= read.table('pi2 f1 .txt',header=F)
pi3f= read.table('pi3 f1 .txt',header=F)
pi4f= read.table('pi4 f1 .txt',header=F)
pi5f= read.table('pi5 f1 .txt',header=F)

pi1ff= read.table('pi1 f .txt',header=F)
pi2ff= read.table('pi2 f .txt',header=F)
pi3ff= read.table('pi3 f .txt',header=F)
pi4ff= read.table('pi4 f .txt',header=F)
pi5ff= read.table('pi5 f .txt',header=F)

par(font=2,font.lab=2,font.axis=2)
par(mfrow=c(5,1))
boxplot(cbind(pi5[,1]/peak5,pi5f[,1],pi5ff[,1],
pi5[,2]/peak5,pi5f[,2],pi5ff[,2],
pi5[,3]/peak5,pi5f[,3],pi5ff[,3]),
at=c(1,2,3,5,6,7,9,10,11),names=c('','Pi1','','','Pi2','','','Pi3',''))

boxplot(cbind(pi4[,1]/peak4,pi4f[,1],pi4ff[,1],
pi4[,2]/peak4,pi4f[,2],pi4ff[,2],
pi4[,3]/peak4,pi4f[,3],pi4ff[,3]),
at=c(1,2,3,5,6,7,9,10,11),names=c('','Pi1','','','Pi2','','','Pi3',''))

boxplot(cbind(pi1[,1]/peak1,pi1f[,1],pi1ff[,1],
pi1[,2]/peak1,pi1f[,2],pi1ff[,2],
pi1[,3]/peak1,pi1f[,3],pi1ff[,3]),
at=c(1,2,3,5,6,7,9,10,11),names=c('','Pi1','','','Pi2','','','Pi3',''))

boxplot(cbind(pi3[,1]/peak3,pi3f[,1],pi3ff[,1],
pi3[,2]/peak3,pi3f[,2],pi3ff[,2],
pi3[,3]/peak3,pi3f[,3],pi3ff[,3]),
at=c(1,2,3,5,6,7,9,10,11),names=c('','Pi1','','','Pi2','','','Pi3',''))

boxplot(cbind(pi2[,1]/peak2,pi2f[,1],pi2ff[,1],
pi2[,2]/peak2,pi2f[,2],pi2ff[,2],
pi2[,3]/peak2,pi2f[,3],pi2ff[,3]),
at=c(1,2,3,5,6,7,9,10,11),names=c('','Pi1','','','Pi2','','','Pi3',''))

par(mfrow=c(1,3))
par(font=2,font.lab=2,font.axis=2)
setwd('C:\\Users\\Desktop\\')

boxplot(cbind((pi5[,2]+pi5[,1]+pi5[,3])/peak5,
(pi4[,2]+pi4[,1]+pi4[,3])/peak4,(pi1[,2]+pi1[,1]+pi1[,3])/peak1,
(pi3[,2]+pi3[,1]+pi3[,3])/peak3,(pi2[,2]+pi2[,1]+pi2[,3])/peak2),names=c('High','Mid-high','Medium','Mid-low','Low'),
xlab='Noise level',main='Sum of True Pis',ylim=c(0.9,1.25))
abline(h=0,lwd=2,col=2)

boxplot(cbind(pi5f[,2]+pi5f[,1]+pi5f[,3],
pi4f[,2]+pi4f[,1]+pi4f[,3],pi1f[,2]+pi1f[,1]+pi1f[,3],
pi3f[,2]+pi3f[,1]+pi3f[,3],pi2f[,2]+pi2f[,1]+pi2f[,3]),names=c('High','Mid-high','Medium','Mid-low','Low'),
xlab='Noise level',main='Sum of estimated Pis using True Parameters',ylim=c(0.9,1.25))
abline(h=0,lwd=2,col=2)

boxplot(cbind(pi5ff[,2]+pi5ff[,1]+pi5ff[,3],
pi4ff[,2]+pi4ff[,1]+pi4ff[,3],pi1ff[,2]+pi1ff[,1]+pi1ff[,3],
pi3ff[,2]+pi3ff[,1]+pi3ff[,3],pi2ff[,2]+pi2ff[,1]+pi2ff[,3]),names=c('High','Mid-high','Medium','Mid-low','Low'),
xlab='Noise level',main='Sum of estimated Pis using Estimated Parameters',ylim=c(0.9,1.25))

par(mfrow=c(1,3))
par(font=2,font.lab=2,font.axis=2)
setwd('C:\\Users\\Desktop\\')

boxplot(cbind(pi5[,1]/pi5[,3],
pi4[,1]/pi4[,3],pi1[,1]/pi1[,3],
pi3[,1]/pi3[,3],pi2[,1]/pi2[,3]),names=c('High','Mid-high','Medium','Mid-low','Low'),
xlab='Noise level',main='Pi1/Pi3',ylim=c(1,10))
abline(h=0,lwd=2,col=2)

boxplot(cbind(pi5f[,1]/pi5f[,3],
pi4f[,1]/pi4f[,3],pi1f[,1]/pi1f[,3],
pi3f[,1]/pi3f[,3],pi2f[,1]/pi2f[,3]),names=c('High','Mid-high','Medium','Mid-low','Low'),
xlab='Noise level',main='Pi1/Pi3 using True Parameters',ylim=c(1,10))
abline(h=0,lwd=2,col=2)

boxplot(cbind(pi5ff[,1]/pi5ff[,3],
pi4ff[,1]/pi4ff[,3],pi1ff[,1]/pi1ff[,3],
pi3ff[,1]/pi3ff[,3],pi2ff[,1]/pi2ff[,3]),names=c('High','Mid-high','Medium','Mid-low','Low'),
xlab='Noise level',main='Pi1/Pi3 using Estimated Parameters',ylim=c(1,10))
pi1-pi5

### Figure 2 ###

par(font=2,font.lab=2,font.axis=2)
par(mfrow=c(1,2))

bi1 = scan('bi11 f .txt')
bi2 = scan('bi12 f .txt')
bi3 = scan('bi13 f .txt')
bi4 = scan('bi14 f .txt')
bi5 = scan('bi15 f .txt')

bi11 = scan('bi11 f1 .txt')
bi12 = scan('bi12 f1 .txt')
bi13 = scan('bi13 f1 .txt')
bi14 = scan('bi14 f1 .txt')
bi15 = scan('bi15 f1 .txt')

boxplot(cbind(bi5,bi4,bi1,bi3,bi2),main='Estimated-True',
names=c('High','Mid-high','Medium','Mid-low','Low'))

abline(h=0,col=2)
bi1 = scan('bi21 f .txt')
bi2 = scan('bi22 f .txt')
bi3 = scan('bi23 f .txt')
bi4 = scan('bi24 f .txt')
bi5 = scan('bi25 f .txt')

bi11 = scan('bi21 f1 .txt')
bi12 = scan('bi22 f1 .txt')
bi13 = scan('bi23 f1 .txt')
bi14 = scan('bi24 f1 .txt')
bi15 = scan('bi25 f1 .txt')

boxplot(cbind(bi5,bi4,bi1,bi3,bi2),main='Average of Estimated-True',
names=c('High','Mid-high','Medium','Mid-low','Low'))
abline(h=0,col=2)

### Figure 3 ###

x=scan(file='C:\\Users\\Desktop\\Data\\findFDG21.txt');nc=x[1];x=x[-1]
m=x
RA=NULL
for (kkk in 1:nc) {

nb=m[1];m=m[-1];y=matrix(m[c(1:(2*nb))],ncol=2,byrow=F);m=m[-c(1:(2*nb))] 
ti=y[,1];curve=y[,2]
tt=ti;lv=curve
zx=lv ; tx=tt ; wt=zx*0+1;tmz=tx[order(-zx)[1]]
RA=c(RA,1/mean(zx[20:25]))
}

par(font=2,font.lab=2,font.axis=2)
par(mfrow=c(1,1))

pt1 = scan('pt11 f .txt')
pt2 = scan('pt12 f .txt')
pt3 = scan('pt13 f .txt')
pt4 = scan('pt14 f .txt')
pt5 = scan('pt15 f .txt')
pt5=pt5[-which.max(pt5)]

pt11 = scan('pt21 f .txt')
pt12 = scan('pt22 f .txt')
pt13 = scan('pt23 f .txt')
pt14 = scan('pt24 f .txt')
pt15 = scan('pt25 f .txt')

pt21 = scan('pt21 f1 .txt')
pt22 = scan('pt22 f1 .txt')
pt23 = scan('pt23 f1 .txt')
pt24 = scan('pt24 f1 .txt')
pt25 = scan('pt25 f1 .txt')

boxplot(cbind(pt5,pt15,pt25,pt4,pt14,pt24,
pt1,pt11,pt21,pt3,pt13,pt23,pt2,pt12,pt22,RA),
names=c('','High','','','Mid-high','','','Medium','','','Mid-low','','','Low','','AIF'),
at=c(1,2,3,5,6,7,9,10,11,13,14,15,17,18,19,21),
main='Peak to Tail ratio')

abline(h=0,col=2)

### Figure 4 ###

setwd('C:\\Users\Documents\\Spillover\\')

FDG62.5 = read.table('FDG62.5 .txt',header=T)
FDG52.5 = read.table('FDG52.5 .txt',header=T)
FDG42.5 = read.table('FDG42.5 .txt',header=T)
FDG32.5 = read.table('FDG32.5 .txt',header=T)
FDG22.5 = read.table('FDG22.5 .txt',header=T)
FDG12.5 = read.table('FDG12.5 .txt',header=T)

#names=c('MSE','CONE','CO47','CO32','CO32_62','CO47_62','CO62_32','CO62_47','MTT4',
#'MTT5','MTT12','MTT22','MTT32','MTT47','MTT62','PEAK2','COP','COP2')

boxplot(cbind(sqrt(FDG12.5[,1]),sqrt(FDG22.5[,1]),sqrt(FDG32.5[,1]),
sqrt(FDG42.5[,1]),sqrt(FDG52.5[,1]),sqrt(FDG62.5[,1])),
names=c('12.5','22.5','32.5','42.5','52.5','62.5'),
xlab='Minutes',main=expression(paste('Boxplot of ',sqrt(MSE),'of PBCMM using Reduced Time Period')))

mean(FDG12.5[,18])*100
sd(FDG12.5[,18])*100
mean(FDG12.5[,2])*100
sd(FDG12.5[,2])*100
mean(FDG12.5[,5])*100
sd(FDG12.5[,5])*100
mean(FDG12.5[,15])*100
sd(FDG12.5[,15])*100
par(font=2,font.lab=2,font.axis=2)
par(mfrow=c(2,2))
layout.matrix <- matrix(c(1, 2, 3, 4), nrow = 2, ncol = 2)
layout(mat = layout.matrix) 
par(mar=c(3,3,3,1))

setwd('C:\\Users\\Desktop\\')

sim1 = read.table('sim1 f1 .txt',header=F)
sim2 = read.table('sim2 f1 .txt',header=F)
sim3 = read.table('sim3 f1 .txt',header=F)
sim4 = read.table('sim4 f1 .txt',header=F)
sim5 = read.table('sim5 f1 .txt',header=F)

pi1 = read.table('pi1.txt',header=F)
pi2 = read.table('pi2.txt',header=F)
pi3 = read.table('pi3.txt',header=F)
pi4 = read.table('pi4.txt',header=F)
pi5 = read.table('pi5.txt',header=F)

peak1 = scan('Peak1.txt')
peak2 = scan('Peak2.txt')
peak3 = scan('Peak3.txt')
peak4 = scan('Peak4.txt')
peak5 = scan('Peak5.txt')

pi1f = read.table('pi1 f1 .txt',header=F)
pi2f= read.table('pi2 f1 .txt',header=F)
pi3f= read.table('pi3 f1 .txt',header=F)
pi4f= read.table('pi4 f1 .txt',header=F)
pi5f= read.table('pi5 f1 .txt',header=F)

par(mfrow=c(2,2))
par(font=2,font.lab=2,font.axis=2)
boxplot(cbind(sqrt(sim5[,1]),sqrt(sim4[,1]),sqrt(sim1[,1]),sqrt(sim3[,1]),sqrt(sim2[,1])),
main='RMSE in 200 Simulation Studies Each Level',log='y',
names=c('High','Mid-high','Medium','Mid-low','Low'),xlab='Noise level',
outline=F,border='grey90',col='grey90')

boxplot(cbind(pi5[,1]/peak5-pi5f[,1],pi4[,1]/peak4-pi4f[,1],pi1[,1]/peak1-pi1f[,1],
pi3[,1]/peak3-pi3f[,1],pi2[,1]/peak2-pi2f[,1]),names=c('High','Mid-high','Medium','Mid-low','Low'),
xlab='Noise level',main=expression(paste('Fit Residuals on ',pi[1])),
outline=F,border='grey90',col='grey90')
abline(h=0,lwd=2,col=2)

boxplot(cbind(pi5[,2]/peak5-pi5f[,2],pi4[,2]/peak4-pi4f[,2],pi1[,2]/peak1-pi1f[,2],
pi3[,2]/peak3-pi3f[,2],pi2[,2]/peak2-pi2f[,2]),names=c('High','Mid-high','Medium','Mid-low','Low'),
xlab='Noise level',main=expression(paste('Fit Residuals on ',pi[2])),
outline=F,border='grey90',col='grey90')
abline(h=0,lwd=2,col=2)

boxplot(cbind(pi5[,3]/peak5-pi5f[,3],pi4[,3]/peak4-pi4f[,3],pi1[,3]/peak1-pi1f[,3],
pi3[,3]/peak3-pi3f[,3],pi2[,3]/peak2-pi2f[,3]),names=c('High','Mid-high','Medium','Mid-low','Low'),
xlab='Noise level',main=expression(paste('Fit Residuals on ',pi[3])),
outline=F,border='grey90',col='grey90')
abline(h=0,lwd=2,col=2)

sim1 = read.table('sim1 f .txt',header=F)
sim2 = read.table('sim2 f .txt',header=F)
sim3 = read.table('sim3 f .txt',header=F)
sim4 = read.table('sim4 f .txt',header=F)
sim5 = read.table('sim5 f .txt',header=F)

pi1 = read.table('pi1.txt',header=F)
pi2 = read.table('pi2.txt',header=F)
pi3 = read.table('pi3.txt',header=F)
pi4 = read.table('pi4.txt',header=F)
pi5 = read.table('pi5.txt',header=F)

pi1f= read.table('pi1 f .txt',header=F)
pi2f= read.table('pi2 f .txt',header=F)
pi3f= read.table('pi3 f .txt',header=F)
pi4f= read.table('pi4 f .txt',header=F)
pi5f= read.table('pi5 f .txt',header=F)

boxplot(cbind(sqrt(sim5[,1]),sqrt(sim4[,1]),sqrt(sim1[,1]),sqrt(sim3[,1]),sqrt(sim2[,1])),
main='RMSE in 200 Simulation Studies Each Level',log='y',
names=c('High','Mid-high','Medium','Mid-low','Low'),xlab='Noise level',add=T)

boxplot(cbind(pi5[,1]/peak5-pi5f[,1],pi4[,1]/peak4-pi4f[,1],pi1[,1]/peak1-pi1f[,1],
pi3[,1]/peak3-pi3f[,1],pi2[,1]/peak2-pi2f[,1]),names=c('High','Mid-high','Medium','Mid-low','Low'),
xlab='Noise level',main=expression(paste('Fit Residuals on ',pi[1])),add=T)
abline(h=0,lwd=2,col=2)

boxplot(cbind(pi5[,2]/peak5-pi5f[,2],pi4[,2]/peak4-pi4f[,2],pi1[,2]/peak1-pi1f[,2],
pi3[,2]/peak3-pi3f[,2],pi2[,2]/peak2-pi2f[,2]),names=c('High','Mid-high','Medium','Mid-low','Low'),
xlab='Noise level',main=expression(paste('Fit Residuals on ',pi[2])),add=T)
abline(h=0,lwd=2,col=2)

boxplot(cbind(pi5[,3]/peak5-pi5f[,3],pi4[,3]/peak4-pi4f[,3],pi1[,3]/peak1-pi1f[,3],
pi3[,3]/peak3-pi3f[,3],pi2[,3]/peak2-pi2f[,3]),names=c('High','Mid-high','Medium','Mid-low','Low'),
xlab='Noise level',main=expression(paste('Fit Residuals on ',pi[3])),add=T)
abline(h=0,lwd=2,col=2)



